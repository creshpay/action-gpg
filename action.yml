name: 'Enable GPG Signing'

description: |
  Set up and configure git to enable GPG signing so that commits and tags
  created within actions workflows are trusted and verified.

branding:
  icon: 'lock'
  color: 'purple'

inputs:

  gpg-passphrase:
    description: 'GPG Passphrase'
    required: true

  gpg-sign-key:
    description: 'GPG sign key'
    required: true

  git-username:
    description: 'Git username'
    required: true

  git-email:
    description: 'Git user email'
    required: true

runs:
  using: "composite"
  steps:

    - name: Configure GPG Agent
      shell: sh
      run: |
        if [ -f /usr/lib/systemd/user/gpg-agent.service ]; then
          mkdir -p ~/.gnupg
          if [ -f ~/.gnupg/gpg-agent.conf ]; then
            TEMP_GPG_CONF=$(mktemp)
            # awk magic merging config files together, overriding duplicate
            awk 'NR==FNR{a[$1];if(NF&&$0!~/^#/) print $0;next} !($1 in a) && $1!~/^#/' \
              ${GITHUB_ACTION_PATH}/config/gpg-agent.conf \
              ~/.gnupg/gpg-agent.conf \
              > ${TEMP_GPG_CONF}
            mv ${TEMP_GPG_CONF} ~/.gnupg/gpg-agent.conf
          else
            cp ${GITHUB_ACTION_PATH}/config/gpg-agent.conf ~/.gnupg/gpg-agent.conf
          fi
          chmod 600 ~/.gnupg/*
          chmod 700 ~/.gnupg
          systemctl --user restart gpg-agent
        else
          gpg-agent --daemon \
            --allow-preset-passphrase \
            --default-cache-ttl 60 \
            --max-cache-ttl 60
        fi

    - name: Import GPG Key
      shell: sh
      run: |
        echo ${{ inputs.gpg-passphrase }} > passfile
        echo -n ${{ inputs.gpg-sign-key }} | base64 --decode > signkey
        gpg --pinentry-mode loopback \
          --passphrase-file passfile \
          --import signkey
        rm passfile signkey
        GPG_FINGERPRINT=$( \
          gpg -K --with-fingerprint \
          | sed -n 4p \
          | sed -e 's/ *//g' \
        )
        echo "${GPG_FINGERPRINT}:6:" | gpg --import-ownertrust

    - name: Preset Passphrase In GPG Agent
      shell: sh
      run: |
        GPG_KEYGRIP=`gpg --with-keygrip -K \
          | sed -n '/[S]/{n;p}' \
          | sed 's/Keygrip = //' \
          | sed 's/ *//g'`
        GPG_PASSPHRASE_HEX=`echo -n ${{ inputs.gpg-passphrase }} \
          | od -A n -t x1 \
          | tr -d ' ' | tr -d '\n'`
        echo "PRESET_PASSPHRASE $GPG_KEYGRIP -1 $GPG_PASSPHRASE_HEX" \
          | gpg-connect-agent

    - name: Configure Git
      shell: sh
      run: |
        export CI_SIGNINGKEY_ID=$( \
          gpg --list-signatures --with-colons \
          | grep 'sig' \
          | grep ${{ inputs.git-email }} \
          | head -n 1 \
          | cut -d':' -f5 \
        )
        git config --global user.name "${{ inputs.git-username }}"
        git config --global user.email "${{ inputs.git-email }}"
        git config --global user.signingkey $CI_SIGNINGKEY_ID
        git config --global commit.gpgsign true
        git config --global tag.gpgsign true
